server:
  port: 8080

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/hrsdb
    username: root
    password: root1
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
        jdbc:
          time_zone: UTC
    open-in-view: false
  application:
    name: hotel-booking

# Logging Configuration
logging:
  level:
    root: INFO
    com.hrs.hotelbooking: INFO
    com.hrs.hotelbooking.aspect: INFO
    org.hibernate.SQL: INFO
    org.hibernate.type.descriptor.sql.BasicBinder: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: /tmp/logs/hrs/application.log
    max-size: 10MB
    max-history: 7

thread:
  pool:
    size: 10

cancellation:
  policy:
    api:
      url: http://api.example.com/cancellation-policies

resilience4j:
  circuitbreaker:
    instances:
      hotelierAdapter:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
  retry:
    instances:
      hotelierAdapter:
        maxAttempts: 3
        waitDuration: 1s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
  ratelimiter:
    instances:
      hotelierAdapter:
        limitForPeriod: 10
        limitRefreshPeriod: 1s
        timeoutDuration: 0s

hotelier:
  api:
    url: http://localhost:8081/api
    timeout: 5000
    retry:
      maxAttempts: 3
      initialInterval: 1000
      multiplier: 2
      maxInterval: 10000
user:
  cancel:
    url: http://localhost:8080/api/bookings/cancelBooking
    timeout: 5000
    retry:
      maxAttempts: 3
      initialInterval: 1000
      multiplier: 2
      maxInterval: 10000